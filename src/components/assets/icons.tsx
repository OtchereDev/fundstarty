export function Logo(props: Readonly<React.SVGProps<SVGSVGElement>>) {
  return (
    <svg
      width="114"
      height="38"
      viewBox="0 0 214 88"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      {...props}
    >
      <path
        d="M51.0694 7.77382V4.73836C51.0694 3.48126 50.5704 2.27601 49.6818 1.38757C48.7933 0.499044 47.5882 8.03711e-06 46.331 8.03711e-06H43.2956C39.8903 8.03711e-06 36.5567 0.978463 33.6916 2.81952C30.8272 4.66044 28.5518 7.28621 27.1376 10.3843C26.8494 11.0055 26.2269 11.4032 25.5417 11.4032C24.8564 11.4032 24.2339 11.0055 23.9457 10.3843C22.5303 7.28427 20.253 4.65671 17.386 2.81563C14.5184 0.974702 11.1815 -0.00323446 7.77381 8.03711e-06H4.73835C3.48125 8.03711e-06 2.276 0.499044 1.38756 1.38757C0.499035 2.27609 0 3.48125 0 4.73836V7.77382C0 12.4844 1.8714 17.0016 5.20193 20.3328C8.53311 23.6633 13.0504 25.5347 17.7609 25.5347C19.0699 25.5347 20.3257 26.0547 21.2516 26.9806C22.1775 27.9064 22.6974 29.1623 22.6974 30.4713V31.0533C22.6702 31.7505 22.8925 32.4345 23.3238 32.9829C23.7551 33.5313 24.3681 33.9088 25.052 34.0462C25.8842 34.1899 26.7367 33.9556 27.3782 33.4072C28.0197 32.8588 28.3839 32.0532 28.3718 31.2089V30.4711C28.3718 29.1621 28.8918 27.9063 29.8177 26.9804C30.7435 26.0546 31.9994 25.5346 33.3084 25.5346C38.0189 25.5346 42.5362 23.6632 45.8674 20.3327C49.1979 17.0015 51.0694 12.4844 51.0694 7.77382Z"
        fill="#541975"
      />
      <path
        d="M27.2501 59.582C27.2501 60.53 26.4819 61.2982 25.5339 61.2982C24.5858 61.2982 23.8176 60.53 23.8176 59.582C23.8176 58.6339 24.5858 57.8657 25.5339 57.8657C26.4819 57.8657 27.2501 58.6339 27.2501 59.582Z"
        fill="#364C6F"
      />
      <path
        d="M45.3949 59.622C45.3949 54.3549 43.3025 49.3031 39.578 45.5786C35.8535 41.8541 30.8017 39.7617 25.5346 39.7617C20.2675 39.7617 15.2157 41.8541 11.4912 45.5786C7.7667 49.3031 5.67432 54.3549 5.67432 59.622C5.67432 64.8891 7.7667 69.9409 11.4912 73.6654C15.2157 77.3899 20.2675 79.4823 25.5346 79.4823C30.8017 79.4823 35.8535 77.3899 39.578 73.6654C43.3025 69.9409 45.3949 64.8891 45.3949 59.622ZM31.2089 59.622C31.1982 60.102 31.1266 60.5789 30.9962 61.0406L31.8897 61.9202C32.6073 62.6371 32.8872 63.6827 32.6244 64.6624C32.3622 65.6415 31.5972 66.4072 30.6174 66.6694C29.6377 66.9322 28.5922 66.6516 27.8752 65.9347L26.9532 65.0836C26.0266 65.3515 25.0425 65.3515 24.116 65.0836L23.2224 65.9772C22.5049 66.6947 21.4599 66.9746 20.4802 66.7118C19.5005 66.4496 18.7354 65.6846 18.4726 64.7048C18.2104 63.7251 18.4904 62.6796 19.2079 61.9627L20.1015 61.083C19.8336 60.1565 19.8336 59.173 20.1015 58.2458L19.2218 57.3662C18.5049 56.6493 18.2244 55.6044 18.4872 54.6246C18.7494 53.6449 19.515 52.8799 20.4941 52.6171C21.4739 52.3549 22.5194 52.6348 23.2363 53.3517L24.1299 54.2453C25.0571 53.9774 26.0405 53.9774 26.9671 54.2453L27.8607 53.3517H27.8613C28.5782 52.6348 29.6231 52.3549 30.6028 52.6171C31.5825 52.8799 32.3476 53.6449 32.6104 54.6246C32.8726 55.6044 32.5927 56.6493 31.8758 57.3662L30.9961 58.2458C31.1234 58.6942 31.195 59.1565 31.2089 59.622H31.2089Z"
        fill="#541975"
      />
      <path
        d="M61.1793 44.8867H76.5736V49.5719H66.0318V55.1607H75.168V59.8459H66.0318V69.5176H61.1793V44.8867ZM84.3777 70.2204C83.0613 70.2204 81.957 69.8188 81.0645 69.0156C80.1721 68.1901 79.7036 67.1303 79.659 65.8363V54.893H84.3442V64.0961C84.3888 64.7431 84.5561 65.2674 84.8462 65.669C85.1362 66.0483 85.627 66.2379 86.3187 66.2379C87.0103 66.2379 87.6015 66.0037 88.0924 65.5351C88.6055 65.0666 88.9959 64.4308 89.2637 63.6276C89.5537 62.8021 89.6987 61.8762 89.6987 60.8499V54.893H94.384V69.5176H90.1338L89.7657 66.8403L89.8326 67.1415C89.4979 67.7439 89.074 68.2793 88.5609 68.7479C88.0477 69.2164 87.4342 69.5734 86.7203 69.8188C86.0286 70.0865 85.2478 70.2204 84.3777 70.2204ZM103.453 54.893L103.821 57.5033L103.754 57.2691C104.267 56.3543 104.992 55.6181 105.929 55.0603C106.866 54.4802 108.015 54.1902 109.376 54.1902C110.759 54.1902 111.908 54.6029 112.823 55.4284C113.76 56.2316 114.24 57.2802 114.262 58.5742V69.5176H109.577V60.3145C109.555 59.6675 109.376 59.1543 109.041 58.775C108.729 58.3734 108.194 58.1726 107.435 58.1726C106.721 58.1726 106.096 58.4069 105.561 58.8754C105.026 59.3439 104.613 59.9798 104.323 60.783C104.033 61.5862 103.888 62.5121 103.888 63.5607V69.5176H99.2025V54.893H103.453ZM125.03 69.9192C123.669 69.9192 122.453 69.6068 121.382 68.9821C120.311 68.3351 119.463 67.4092 118.839 66.2045C118.236 64.9997 117.935 63.5718 117.935 61.9208C117.935 60.2698 118.27 58.8643 118.939 57.7041C119.608 56.544 120.523 55.6627 121.683 55.0603C122.843 54.4579 124.16 54.1567 125.632 54.1567C126.569 54.1567 127.462 54.3018 128.309 54.5918C129.18 54.8818 129.905 55.328 130.485 55.9304V57.4029V43.113H135.137V69.5176H130.451V66.673L130.819 67.677C130.061 68.3017 129.213 68.8371 128.276 69.2833C127.339 69.7072 126.257 69.9192 125.03 69.9192ZM126.569 65.9702C127.194 65.9702 127.741 65.8921 128.209 65.7359C128.7 65.5574 129.124 65.312 129.481 64.9997C129.86 64.665 130.184 64.2523 130.451 63.7614V60.1806C130.273 59.6898 129.994 59.277 129.615 58.9424C129.258 58.5854 128.811 58.3177 128.276 58.1392C127.763 57.9384 127.194 57.838 126.569 57.838C125.878 57.838 125.231 58.0165 124.628 58.3734C124.048 58.7081 123.58 59.1766 123.223 59.779C122.866 60.3814 122.687 61.073 122.687 61.8539C122.687 62.6348 122.866 63.3375 123.223 63.9622C123.58 64.5869 124.048 65.0778 124.628 65.4347C125.231 65.7917 125.878 65.9702 126.569 65.9702ZM144.709 69.8188C143.504 69.8188 142.377 69.6068 141.328 69.1829C140.302 68.759 139.432 68.1678 138.718 67.4092L140.659 64.8324C141.373 65.4794 142.031 65.9479 142.634 66.2379C143.258 66.5056 143.816 66.6395 144.307 66.6395C144.686 66.6395 145.021 66.606 145.311 66.5391C145.623 66.4499 145.869 66.3272 146.047 66.171C146.226 65.9925 146.315 65.7694 146.315 65.5017C146.315 65.1224 146.159 64.8212 145.846 64.5981C145.556 64.375 145.177 64.1965 144.709 64.0626C144.24 63.9065 143.738 63.7503 143.203 63.5941C141.864 63.1702 140.893 62.5567 140.291 61.7535C139.711 60.928 139.421 60.0356 139.421 59.0762C139.421 58.34 139.611 57.6037 139.99 56.8675C140.391 56.1089 141.016 55.4842 141.864 54.9934C142.734 54.4802 143.85 54.2237 145.211 54.2237C146.438 54.2237 147.475 54.3464 148.323 54.5918C149.171 54.8372 149.974 55.2388 150.732 55.7966L148.959 58.5408C148.535 58.2061 148.055 57.9272 147.52 57.7041C147.007 57.4587 146.527 57.3248 146.081 57.3025C145.679 57.2802 145.333 57.3248 145.043 57.4364C144.775 57.5479 144.564 57.693 144.407 57.8714C144.251 58.0499 144.173 58.2396 144.173 58.4404C144.151 58.8643 144.307 59.1989 144.642 59.4443C144.999 59.6898 145.445 59.8794 145.98 60.0133C146.516 60.1471 147.04 60.3033 147.553 60.4818C148.267 60.7049 148.881 61.0061 149.394 61.3854C149.907 61.7646 150.297 62.222 150.565 62.7575C150.855 63.2706 151 63.8953 151 64.6316C151 65.524 150.766 66.3718 150.297 67.175C149.851 67.9558 149.16 68.5917 148.222 69.0825C147.308 69.5734 146.136 69.8188 144.709 69.8188ZM156.297 48.4675H160.982V54.8261H164.529V58.4738H160.982V69.5176H156.297V58.4738H154.021V54.8261H156.297V48.4675ZM174.253 69.9192C172.892 69.9192 171.654 69.6514 170.538 69.116C169.445 68.5582 168.575 67.7104 167.928 66.5726C167.281 65.4347 166.957 63.9846 166.957 62.222C166.957 60.571 167.292 59.1432 167.961 57.9384C168.631 56.7336 169.512 55.8077 170.605 55.1607C171.698 54.4914 172.858 54.1567 174.086 54.1567C175.536 54.1567 176.629 54.4022 177.365 54.893C178.124 55.3615 178.748 55.8858 179.239 56.4659L179.039 57.0348L179.474 54.893H183.824V69.5176H179.139V66.3383L179.507 67.3423C179.462 67.3423 179.329 67.4762 179.105 67.7439C178.882 67.9893 178.548 68.2905 178.101 68.6475C177.678 68.9821 177.142 69.2722 176.495 69.5176C175.87 69.7853 175.123 69.9192 174.253 69.9192ZM175.592 66.1041C176.149 66.1041 176.651 66.026 177.098 65.8698C177.544 65.6913 177.934 65.4459 178.269 65.1335C178.603 64.7989 178.894 64.3861 179.139 63.8953V60.3145C178.96 59.8236 178.693 59.4109 178.336 59.0762C177.979 58.7193 177.555 58.4515 177.064 58.273C176.573 58.0722 176.027 57.9718 175.424 57.9718C174.755 57.9718 174.13 58.1503 173.55 58.5073C172.992 58.842 172.546 59.3105 172.211 59.9129C171.877 60.5153 171.709 61.2069 171.709 61.9878C171.709 62.7686 171.888 63.4714 172.245 64.0961C172.602 64.7208 173.07 65.2116 173.651 65.5686C174.253 65.9256 174.9 66.1041 175.592 66.1041ZM192.869 54.893L193.304 58.9089L193.203 58.3065C193.627 57.4364 194.207 56.7001 194.943 56.0978C195.68 55.4731 196.405 54.9934 197.119 54.6587C197.855 54.3241 198.413 54.1567 198.792 54.1567L198.558 58.842C197.465 58.7081 196.527 58.8866 195.747 59.3774C194.966 59.8682 194.363 60.5153 193.939 61.3184C193.516 62.1216 193.304 62.9471 193.304 63.7949V69.5176H188.652V54.893H192.869ZM203.75 48.4675H208.435V54.8261H211.983V58.4738H208.435V69.5176H203.75V58.4738H201.475V54.8261H203.75V48.4675Z"
        fill="#541975"
      />
    </svg>
  )
}

export function Search(props: Readonly<React.SVGProps<SVGSVGElement>>) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      fill="none"
      viewBox="0 0 24 24"
      strokeWidth={1.8}
      stroke="currentColor"
      //   className="h-6 w-6"
      {...props}
      className={'h-6 w-6 ' + props.className}
    >
      <path
        strokeLinecap="round"
        strokeLinejoin="round"
        d="m21 21-5.197-5.197m0 0A7.5 7.5 0 1 0 5.196 5.196a7.5 7.5 0 0 0 10.607 10.607Z"
      />
    </svg>
  )
}

export function Bars(props: Readonly<React.SVGProps<SVGSVGElement>>) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      fill="none"
      viewBox="0 0 24 24"
      strokeWidth={2}
      stroke="currentColor"
      {...props}
      className={'h-6 w-6 ' + props.className}
    >
      <path
        strokeLinecap="round"
        strokeLinejoin="round"
        d="M3.75 6.75h16.5M3.75 12h16.5M12 17.25h8.25"
      />
    </svg>
  )
}

export function Zap(props: Readonly<React.SVGProps<SVGSVGElement>>) {
  return (
    <svg
      width="20"
      height="20"
      viewBox="0 0 20 20"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      {...props}
    >
      <path
        d="M10.8333 1.66663L2.5 11.6666H10L9.16667 18.3333L17.5 8.33329H10L10.8333 1.66663Z"
        stroke="#344054"
        strokeWidth="1.67"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
    </svg>
  )
}
export function Cog(props: Readonly<React.SVGProps<SVGSVGElement>>) {
  return (
    <svg
      width="20"
      height="20"
      viewBox="0 0 20 20"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      {...props}
    >
      <g clipPath="url(#clip0_1214_662)">
        <path
          d="M10.0002 12.5C11.3809 12.5 12.5002 11.3808 12.5002 10C12.5002 8.61933 11.3809 7.50004 10.0002 7.50004C8.61945 7.50004 7.50016 8.61933 7.50016 10C7.50016 11.3808 8.61945 12.5 10.0002 12.5Z"
          stroke="#667085"
          strokeWidth="1.66667"
          strokeLinecap="round"
          strokeLinejoin="round"
        />
        <path
          d="M16.1668 12.5C16.0559 12.7514 16.0228 13.0302 16.0718 13.3005C16.1208 13.5709 16.2497 13.8203 16.4418 14.0167L16.4918 14.0667C16.6468 14.2215 16.7697 14.4053 16.8536 14.6076C16.9375 14.81 16.9806 15.0268 16.9806 15.2459C16.9806 15.4649 16.9375 15.6818 16.8536 15.8841C16.7697 16.0864 16.6468 16.2702 16.4918 16.425C16.337 16.58 16.1532 16.7029 15.9509 16.7868C15.7486 16.8707 15.5317 16.9139 15.3127 16.9139C15.0936 16.9139 14.8768 16.8707 14.6744 16.7868C14.4721 16.7029 14.2883 16.58 14.1335 16.425L14.0835 16.375C13.8871 16.1829 13.6376 16.0541 13.3673 16.005C13.097 15.956 12.8182 15.9891 12.5668 16.1C12.3204 16.2057 12.1101 16.3811 11.9621 16.6047C11.814 16.8282 11.7346 17.0902 11.7335 17.3584V17.5C11.7335 17.9421 11.5579 18.366 11.2453 18.6785C10.9328 18.9911 10.5089 19.1667 10.0668 19.1667C9.6248 19.1667 9.20088 18.9911 8.88832 18.6785C8.57576 18.366 8.40016 17.9421 8.40016 17.5V17.425C8.39371 17.1492 8.30443 16.8817 8.14392 16.6573C7.98341 16.4329 7.75911 16.2619 7.50016 16.1667C7.24882 16.0558 6.97 16.0227 6.69967 16.0717C6.42934 16.1207 6.17989 16.2496 5.9835 16.4417L5.9335 16.4917C5.77871 16.6467 5.59489 16.7696 5.39256 16.8535C5.19023 16.9373 4.97335 16.9805 4.75433 16.9805C4.5353 16.9805 4.31843 16.9373 4.1161 16.8535C3.91377 16.7696 3.72995 16.6467 3.57516 16.4917C3.4202 16.3369 3.29727 16.1531 3.2134 15.9508C3.12952 15.7484 3.08635 15.5316 3.08635 15.3125C3.08635 15.0935 3.12952 14.8766 3.2134 14.6743C3.29727 14.472 3.4202 14.2882 3.57516 14.1334L3.62516 14.0834C3.81728 13.887 3.94615 13.6375 3.99517 13.3672C4.04418 13.0969 4.01109 12.8181 3.90016 12.5667C3.79453 12.3202 3.61913 12.11 3.39555 11.962C3.17198 11.8139 2.90998 11.7344 2.64183 11.7334H2.50016C2.05814 11.7334 1.63421 11.5578 1.32165 11.2452C1.00909 10.9327 0.833496 10.5087 0.833496 10.0667C0.833496 9.62468 1.00909 9.20076 1.32165 8.8882C1.63421 8.57563 2.05814 8.40004 2.50016 8.40004H2.57516C2.85099 8.39359 3.1185 8.30431 3.34291 8.1438C3.56732 7.98329 3.73826 7.75899 3.8335 7.50004C3.94443 7.24869 3.97752 6.96988 3.9285 6.69955C3.87948 6.42922 3.75061 6.17977 3.5585 5.98337L3.5085 5.93337C3.35354 5.77858 3.2306 5.59477 3.14673 5.39244C3.06286 5.19011 3.01968 4.97323 3.01968 4.75421C3.01968 4.53518 3.06286 4.3183 3.14673 4.11597C3.2306 3.91364 3.35354 3.72983 3.5085 3.57504C3.66328 3.42008 3.8471 3.29715 4.04943 3.21327C4.25176 3.1294 4.46864 3.08623 4.68766 3.08623C4.90669 3.08623 5.12357 3.1294 5.3259 3.21327C5.52823 3.29715 5.71204 3.42008 5.86683 3.57504L5.91683 3.62504C6.11323 3.81715 6.36268 3.94603 6.633 3.99504C6.90333 4.04406 7.18215 4.01097 7.4335 3.90004H7.50016C7.74664 3.7944 7.95684 3.619 8.10491 3.39543C8.25297 3.17185 8.33243 2.90986 8.3335 2.64171V2.50004C8.3335 2.05801 8.50909 1.63409 8.82165 1.32153C9.13421 1.00897 9.55813 0.833374 10.0002 0.833374C10.4422 0.833374 10.8661 1.00897 11.1787 1.32153C11.4912 1.63409 11.6668 2.05801 11.6668 2.50004V2.57504C11.6679 2.8432 11.7474 3.10519 11.8954 3.32876C12.0435 3.55234 12.2537 3.72774 12.5002 3.83337C12.7515 3.9443 13.0303 3.97739 13.3007 3.92838C13.571 3.87936 13.8204 3.75049 14.0168 3.55837L14.0668 3.50837C14.2216 3.35341 14.4054 3.23048 14.6078 3.14661C14.8101 3.06273 15.027 3.01956 15.246 3.01956C15.465 3.01956 15.6819 3.06273 15.8842 3.14661C16.0866 3.23048 16.2704 3.35341 16.4252 3.50837C16.5801 3.66316 16.7031 3.84698 16.7869 4.04931C16.8708 4.25164 16.914 4.46851 16.914 4.68754C16.914 4.90657 16.8708 5.12344 16.7869 5.32577C16.7031 5.5281 16.5801 5.71192 16.4252 5.86671L16.3752 5.91671C16.183 6.11311 16.0542 6.36255 16.0052 6.63288C15.9561 6.90321 15.9892 7.18203 16.1002 7.43337V7.50004C16.2058 7.74651 16.3812 7.95672 16.6048 8.10478C16.8283 8.25285 17.0903 8.3323 17.3585 8.33337H17.5002C17.9422 8.33337 18.3661 8.50897 18.6787 8.82153C18.9912 9.13409 19.1668 9.55801 19.1668 10C19.1668 10.4421 18.9912 10.866 18.6787 11.1786C18.3661 11.4911 17.9422 11.6667 17.5002 11.6667H17.4252C17.157 11.6678 16.895 11.7472 16.6714 11.8953C16.4479 12.0434 16.2725 12.2536 16.1668 12.5Z"
          stroke="#667085"
          strokeWidth="1.66667"
          strokeLinecap="round"
          strokeLinejoin="round"
        />
      </g>
      <defs>
        <clipPath id="clip0_1214_662">
          <rect width="20" height="20" fill="white" />
        </clipPath>
      </defs>
    </svg>
  )
}

export function CirclePerson(props: Readonly<React.SVGProps<SVGSVGElement>>) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      fill="none"
      viewBox="0 0 24 24"
      strokeWidth={1.5}
      stroke="currentColor"
      className="h-6 w-6"
      {...props}
    >
      <path
        strokeLinecap="round"
        strokeLinejoin="round"
        d="M17.982 18.725A7.488 7.488 0 0 0 12 15.75a7.488 7.488 0 0 0-5.982 2.975m11.963 0a9 9 0 1 0-11.963 0m11.963 0A8.966 8.966 0 0 1 12 21a8.966 8.966 0 0 1-5.982-2.275M15 9.75a3 3 0 1 1-6 0 3 3 0 0 1 6 0Z"
      />
    </svg>
  )
}

export function CirclePlus(props: Readonly<React.SVGProps<SVGSVGElement>>) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      fill="none"
      viewBox="0 0 24 24"
      strokeWidth={1.5}
      stroke="currentColor"
      className="h-6 w-6"
      {...props}
    >
      <path
        strokeLinecap="round"
        strokeLinejoin="round"
        d="M12 9v6m3-3H9m12 0a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z"
      />
    </svg>
  )
}

export function VerticalEllipse(props: Readonly<React.SVGProps<SVGSVGElement>>) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      fill="none"
      viewBox="0 0 24 24"
      strokeWidth={1.5}
      stroke="currentColor"
      className="h-6 w-6"
      {...props}
    >
      <path
        strokeLinecap="round"
        strokeLinejoin="round"
        d="M12 6.75a.75.75 0 1 1 0-1.5.75.75 0 0 1 0 1.5ZM12 12.75a.75.75 0 1 1 0-1.5.75.75 0 0 1 0 1.5ZM12 18.75a.75.75 0 1 1 0-1.5.75.75 0 0 1 0 1.5Z"
      />
    </svg>
  )
}

export function Chevron(props: Readonly<React.SVGProps<SVGSVGElement>>) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      fill="none"
      viewBox="0 0 24 24"
      strokeWidth={1.5}
      stroke="currentColor"
      className="h-6 w-6"
      {...props}
    >
      <path strokeLinecap="round" strokeLinejoin="round" d="m19.5 8.25-7.5 7.5-7.5-7.5" />
    </svg>
  )
}

export function LogoWhite(props: Readonly<React.SVGProps<SVGSVGElement>>) {
  return (
    <svg
      width="102"
      height="41"
      viewBox="0 0 102 41"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      {...props}
    >
      <path
        d="M24.4162 3.71665V2.2654C24.4162 1.66439 24.1776 1.08816 23.7528 0.663394C23.328 0.238592 22.7518 3.84253e-06 22.1508 3.84253e-06H20.6996C19.0715 3.84253e-06 17.4777 0.467802 16.1079 1.34801C14.7385 2.22815 13.6506 3.48353 12.9744 4.9647C12.8367 5.26172 12.5391 5.45188 12.2114 5.45188C11.8838 5.45188 11.5862 5.26173 11.4484 4.9647C10.7717 3.4826 9.68295 2.22637 8.31223 1.34615C6.94121 0.466004 5.34587 -0.00154639 3.71665 3.84253e-06H2.2654C1.66438 3.84253e-06 1.08815 0.238592 0.66339 0.663394C0.238588 1.0882 0 1.66438 0 2.2654V3.71665C0 5.96875 0.894716 8.12846 2.48704 9.72109C4.07967 11.3134 6.23937 12.2081 8.49147 12.2081C9.11732 12.2081 9.71771 12.4567 10.1604 12.8994C10.603 13.342 10.8516 13.9424 10.8516 14.5683V14.8465C10.8386 15.1799 10.9449 15.5069 11.1511 15.7691C11.3573 16.0313 11.6504 16.2117 11.9773 16.2774C12.3752 16.3462 12.7828 16.2341 13.0895 15.9719C13.3962 15.7097 13.5703 15.3246 13.5645 14.921V14.5682C13.5645 13.9424 13.8131 13.342 14.2558 12.8993C14.6985 12.4567 15.2989 12.2081 15.9247 12.2081C18.1768 12.2081 20.3365 11.3133 21.9291 9.72103C23.5215 8.1284 24.4162 5.96869 24.4162 3.71659L24.4162 3.71665Z"
        fill="#F0F0F0"
      />
      <path
        d="M13.0283 28.4866C13.0283 28.9398 12.661 29.3071 12.2077 29.3071C11.7545 29.3071 11.3872 28.9398 11.3872 28.4866C11.3872 28.0333 11.7545 27.666 12.2077 27.666C12.661 27.666 13.0283 28.0333 13.0283 28.4866Z"
        fill="#F0F0F0"
      />
      <path
        d="M21.7032 28.5049C21.7032 25.9867 20.7029 23.5715 18.9222 21.7908C17.1415 20.0101 14.7263 19.0098 12.2081 19.0098C9.68986 19.0098 7.2746 20.0101 5.49393 21.7908C3.71326 23.5715 2.71289 25.9867 2.71289 28.5049C2.71289 31.0231 3.71326 33.4384 5.49393 35.2191C7.2746 36.9997 9.68986 38.0001 12.2081 38.0001C14.7263 38.0001 17.1415 36.9997 18.9222 35.2191C20.7029 33.4384 21.7032 31.0231 21.7032 28.5049ZM14.921 28.5049C14.9158 28.7344 14.8816 28.9624 14.8192 29.1832L15.2465 29.6037C15.5895 29.9465 15.7233 30.4464 15.5977 30.9148C15.4723 31.3829 15.1066 31.7489 14.6382 31.8743C14.1698 31.9999 13.6699 31.8658 13.3271 31.5231L12.8863 31.1161C12.4433 31.2442 11.9728 31.2442 11.5298 31.1161L11.1026 31.5433C10.7596 31.8864 10.26 32.0202 9.79157 31.8946C9.32317 31.7692 8.95739 31.4035 8.83175 30.935C8.7064 30.4666 8.84023 29.9668 9.18328 29.624L9.6105 29.2034C9.48243 28.7605 9.48243 28.2903 9.6105 27.847L9.18994 27.4264C8.84719 27.0837 8.71306 26.5841 8.83872 26.1157C8.96407 25.6473 9.33012 25.2815 9.79823 25.1559C10.2666 25.0305 10.7665 25.1644 11.1093 25.5071L11.5365 25.9343C11.9798 25.8063 12.45 25.8063 12.8929 25.9343L13.3202 25.5071H13.3205C13.6632 25.1644 14.1628 25.0305 14.6312 25.1559C15.0996 25.2815 15.4654 25.6473 15.591 26.1157C15.7164 26.5841 15.5825 27.0837 15.2398 27.4264L14.8192 27.847C14.8801 28.0614 14.9143 28.2824 14.921 28.5049H14.921Z"
        fill="#F0F0F0"
      />
      <path
        d="M28.52 21.224H35.88V23.464H30.84V26.136H35.208V28.376H30.84V33H28.52V21.224ZM39.6111 33.336C38.9818 33.336 38.4538 33.144 38.0271 32.76C37.6005 32.3653 37.3765 31.8587 37.3551 31.24V26.008H39.5951V30.408C39.6165 30.7173 39.6965 30.968 39.8351 31.16C39.9738 31.3413 40.2085 31.432 40.5391 31.432C40.8698 31.432 41.1525 31.32 41.3871 31.096C41.6325 30.872 41.8191 30.568 41.9471 30.184C42.0858 29.7893 42.1551 29.3467 42.1551 28.856V26.008H44.3951V33H42.3631L42.1871 31.72L42.2191 31.864C42.0591 32.152 41.8565 32.408 41.6111 32.632C41.3658 32.856 41.0725 33.0267 40.7311 33.144C40.4005 33.272 40.0271 33.336 39.6111 33.336ZM48.7309 26.008L48.9069 27.256L48.8749 27.144C49.1202 26.7067 49.4669 26.3547 49.9149 26.088C50.3629 25.8107 50.9122 25.672 51.5629 25.672C52.2242 25.672 52.7735 25.8693 53.2109 26.264C53.6589 26.648 53.8882 27.1493 53.8989 27.768V33H51.6589V28.6C51.6482 28.2907 51.5629 28.0453 51.4029 27.864C51.2535 27.672 50.9975 27.576 50.6349 27.576C50.2935 27.576 49.9949 27.688 49.7389 27.912C49.4829 28.136 49.2855 28.44 49.1469 28.824C49.0082 29.208 48.9389 29.6507 48.9389 30.152V33H46.6989V26.008H48.7309ZM59.0469 33.192C58.3962 33.192 57.8149 33.0427 57.3029 32.744C56.7909 32.4347 56.3855 31.992 56.0869 31.416C55.7989 30.84 55.6549 30.1573 55.6549 29.368C55.6549 28.5787 55.8149 27.9067 56.1349 27.352C56.4549 26.7973 56.8922 26.376 57.4469 26.088C58.0015 25.8 58.6309 25.656 59.3349 25.656C59.7829 25.656 60.2095 25.7253 60.6149 25.864C61.0309 26.0027 61.3775 26.216 61.6549 26.504V27.208V20.376H63.8789V33H61.6389V31.64L61.8149 32.12C61.4522 32.4187 61.0469 32.6747 60.5989 32.888C60.1509 33.0907 59.6335 33.192 59.0469 33.192ZM59.7829 31.304C60.0815 31.304 60.3429 31.2667 60.5669 31.192C60.8015 31.1067 61.0042 30.9893 61.1749 30.84C61.3562 30.68 61.5109 30.4827 61.6389 30.248V28.536C61.5535 28.3013 61.4202 28.104 61.2389 27.944C61.0682 27.7733 60.8549 27.6453 60.5989 27.56C60.3535 27.464 60.0815 27.416 59.7829 27.416C59.4522 27.416 59.1429 27.5013 58.8549 27.672C58.5775 27.832 58.3535 28.056 58.1829 28.344C58.0122 28.632 57.9269 28.9627 57.9269 29.336C57.9269 29.7093 58.0122 30.0453 58.1829 30.344C58.3535 30.6427 58.5775 30.8773 58.8549 31.048C59.1429 31.2187 59.4522 31.304 59.7829 31.304ZM68.4553 33.144C67.8793 33.144 67.3406 33.0427 66.8393 32.84C66.3486 32.6373 65.9326 32.3547 65.5913 31.992L66.5193 30.76C66.8606 31.0693 67.1753 31.2933 67.4633 31.432C67.7619 31.56 68.0286 31.624 68.2633 31.624C68.4446 31.624 68.6046 31.608 68.7433 31.576C68.8926 31.5333 69.0099 31.4747 69.0953 31.4C69.1806 31.3147 69.2233 31.208 69.2233 31.08C69.2233 30.8987 69.1486 30.7547 68.9993 30.648C68.8606 30.5413 68.6793 30.456 68.4553 30.392C68.2313 30.3173 67.9913 30.2427 67.7353 30.168C67.0953 29.9653 66.6313 29.672 66.3433 29.288C66.0659 28.8933 65.9273 28.4667 65.9273 28.008C65.9273 27.656 66.0179 27.304 66.1993 26.952C66.3913 26.5893 66.6899 26.2907 67.0953 26.056C67.5113 25.8107 68.0446 25.688 68.6953 25.688C69.2819 25.688 69.7779 25.7467 70.1833 25.864C70.5886 25.9813 70.9726 26.1733 71.3353 26.44L70.4873 27.752C70.2846 27.592 70.0553 27.4587 69.7993 27.352C69.5539 27.2347 69.3246 27.1707 69.1113 27.16C68.9193 27.1493 68.7539 27.1707 68.6153 27.224C68.4873 27.2773 68.3859 27.3467 68.3113 27.432C68.2366 27.5173 68.1993 27.608 68.1993 27.704C68.1886 27.9067 68.2633 28.0667 68.4233 28.184C68.5939 28.3013 68.8073 28.392 69.0633 28.456C69.3193 28.52 69.5699 28.5947 69.8153 28.68C70.1566 28.7867 70.4499 28.9307 70.6953 29.112C70.9406 29.2933 71.1273 29.512 71.2553 29.768C71.3939 30.0133 71.4633 30.312 71.4633 30.664C71.4633 31.0907 71.3513 31.496 71.1273 31.88C70.9139 32.2533 70.5833 32.5573 70.1353 32.792C69.6979 33.0267 69.1379 33.144 68.4553 33.144ZM73.9955 22.936H76.2355V25.976H77.9315V27.72H76.2355V33H73.9955V27.72H72.9075V25.976H73.9955V22.936ZM82.5804 33.192C81.9297 33.192 81.3377 33.064 80.8044 32.808C80.2817 32.5413 79.8657 32.136 79.5564 31.592C79.247 31.048 79.0924 30.3547 79.0924 29.512C79.0924 28.7227 79.2524 28.04 79.5724 27.464C79.8924 26.888 80.3137 26.4453 80.8364 26.136C81.359 25.816 81.9137 25.656 82.5004 25.656C83.1937 25.656 83.7164 25.7733 84.0684 26.008C84.431 26.232 84.7297 26.4827 84.9644 26.76L84.8684 27.032L85.0764 26.008H87.1564V33H84.9164V31.48L85.0924 31.96C85.071 31.96 85.007 32.024 84.9004 32.152C84.7937 32.2693 84.6337 32.4133 84.4204 32.584C84.2177 32.744 83.9617 32.8827 83.6524 33C83.3537 33.128 82.9964 33.192 82.5804 33.192ZM83.2204 31.368C83.487 31.368 83.727 31.3307 83.9404 31.256C84.1537 31.1707 84.3404 31.0533 84.5004 30.904C84.6604 30.744 84.799 30.5467 84.9164 30.312V28.6C84.831 28.3653 84.703 28.168 84.5324 28.008C84.3617 27.8373 84.159 27.7093 83.9244 27.624C83.6897 27.528 83.4284 27.48 83.1404 27.48C82.8204 27.48 82.5217 27.5653 82.2444 27.736C81.9777 27.896 81.7644 28.12 81.6044 28.408C81.4444 28.696 81.3644 29.0267 81.3644 29.4C81.3644 29.7733 81.4497 30.1093 81.6204 30.408C81.791 30.7067 82.015 30.9413 82.2924 31.112C82.5804 31.2827 82.8897 31.368 83.2204 31.368ZM91.4805 26.008L91.6885 27.928L91.6405 27.64C91.8432 27.224 92.1205 26.872 92.4725 26.584C92.8245 26.2853 93.1712 26.056 93.5125 25.896C93.8645 25.736 94.1312 25.656 94.3125 25.656L94.2005 27.896C93.6778 27.832 93.2298 27.9173 92.8565 28.152C92.4832 28.3867 92.1952 28.696 91.9925 29.08C91.7898 29.464 91.6885 29.8587 91.6885 30.264V33H89.4645V26.008H91.4805ZM96.683 22.936H98.923V25.976H100.619V27.72H98.923V33H96.683V27.72H95.595V25.976H96.683V22.936Z"
        fill="#F0F0F0"
      />
    </svg>
  )
}

export function EyeOpen(props: Readonly<React.SVGProps<SVGSVGElement>>) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      fill="none"
      viewBox="0 0 24 24"
      strokeWidth={1.5}
      stroke="currentColor"
      className="h-6 w-6 cursor-pointer"
      {...props}
    >
      <path
        strokeLinecap="round"
        strokeLinejoin="round"
        d="M2.036 12.322a1.012 1.012 0 0 1 0-.639C3.423 7.51 7.36 4.5 12 4.5c4.638 0 8.573 3.007 9.963 7.178.07.207.07.431 0 .639C20.577 16.49 16.64 19.5 12 19.5c-4.638 0-8.573-3.007-9.963-7.178Z"
      />
      <path strokeLinecap="round" strokeLinejoin="round" d="M15 12a3 3 0 1 1-6 0 3 3 0 0 1 6 0Z" />
    </svg>
  )
}

export function EyeClose(props: Readonly<React.SVGProps<SVGSVGElement>>) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      fill="none"
      viewBox="0 0 24 24"
      strokeWidth={1.5}
      stroke="currentColor"
      className="h-6 w-6 cursor-pointer"
      {...props}
    >
      <path
        strokeLinecap="round"
        strokeLinejoin="round"
        d="M3.98 8.223A10.477 10.477 0 0 0 1.934 12C3.226 16.338 7.244 19.5 12 19.5c.993 0 1.953-.138 2.863-.395M6.228 6.228A10.451 10.451 0 0 1 12 4.5c4.756 0 8.773 3.162 10.065 7.498a10.522 10.522 0 0 1-4.293 5.774M6.228 6.228 3 3m3.228 3.228 3.65 3.65m7.894 7.894L21 21m-3.228-3.228-3.65-3.65m0 0a3 3 0 1 0-4.243-4.243m4.242 4.242L9.88 9.88"
      />
    </svg>
  )
}

export function Camera(props: Readonly<React.SVGProps<SVGSVGElement>>) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      fill="none"
      viewBox="0 0 24 24"
      strokeWidth={1.5}
      stroke="currentColor"
      className="h-6 w-6"
      {...props}
    >
      <path
        strokeLinecap="round"
        strokeLinejoin="round"
        d="M6.827 6.175A2.31 2.31 0 0 1 5.186 7.23c-.38.054-.757.112-1.134.175C2.999 7.58 2.25 8.507 2.25 9.574V18a2.25 2.25 0 0 0 2.25 2.25h15A2.25 2.25 0 0 0 21.75 18V9.574c0-1.067-.75-1.994-1.802-2.169a47.865 47.865 0 0 0-1.134-.175 2.31 2.31 0 0 1-1.64-1.055l-.822-1.316a2.192 2.192 0 0 0-1.736-1.039 48.774 48.774 0 0 0-5.232 0 2.192 2.192 0 0 0-1.736 1.039l-.821 1.316Z"
      />
      <path
        strokeLinecap="round"
        strokeLinejoin="round"
        d="M16.5 12.75a4.5 4.5 0 1 1-9 0 4.5 4.5 0 0 1 9 0ZM18.75 10.5h.008v.008h-.008V10.5Z"
      />
    </svg>
  )
}

export function Message(props: Readonly<React.SVGProps<SVGSVGElement>>) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      fill="none"
      viewBox="0 0 24 24"
      strokeWidth={1.5}
      stroke="currentColor"
      className="h-6 w-6"
      {...props}
    >
      <path
        strokeLinecap="round"
        strokeLinejoin="round"
        d="M20.25 8.511c.884.284 1.5 1.128 1.5 2.097v4.286c0 1.136-.847 2.1-1.98 2.193-.34.027-.68.052-1.02.072v3.091l-3-3c-1.354 0-2.694-.055-4.02-.163a2.115 2.115 0 0 1-.825-.242m9.345-8.334a2.126 2.126 0 0 0-.476-.095 48.64 48.64 0 0 0-8.048 0c-1.131.094-1.976 1.057-1.976 2.192v4.286c0 .837.46 1.58 1.155 1.951m9.345-8.334V6.637c0-1.621-1.152-3.026-2.76-3.235A48.455 48.455 0 0 0 11.25 3c-2.115 0-4.198.137-6.24.402-1.608.209-2.76 1.614-2.76 3.235v6.226c0 1.621 1.152 3.026 2.76 3.235.577.075 1.157.14 1.74.194V21l4.155-4.155"
      />
    </svg>
  )
}

export function CardVector(props: Readonly<React.SVGProps<SVGSVGElement>>) {
  return (
    <svg
      width="326"
      height="193"
      viewBox="0 0 326 193"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      {...props}
    >
      <path
        opacity="0.2"
        d="M398.081 149.07C270.959 181.721 13.9046 226.92 2.66209 146.511C-11.3911 45.9994 150.018 35.5681 157.889 36.1056M157.889 36.1056C165.76 36.6431 305 34.797 348.422 9.39973L382.623 79.0349C276.564 100.573 58.4857 129.579 34.6465 73.293C21.3372 41.8691 22.9844 17.2541 47.7249 -0.132557M157.889 36.1056C70.661 41.2472 48.1012 14.0892 47.7249 -0.132557M47.7249 -0.132557C67.2989 -13.8885 91.5994 -23.1196 109.261 -27.6183L47.7249 -0.132557Z"
        stroke="#D6D8D9"
        strokeWidth="2"
      />
    </svg>
  )
}

export function CardLogo(props: Readonly<React.SVGProps<SVGSVGElement>>) {
  return (
    <svg
      width="60"
      height="60"
      viewBox="0 0 60 60"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      {...props}
    >
      <path
        d="M60 30C60 24.0666 58.2405 18.2664 54.9441 13.3329C51.6476 8.39942 46.9623 4.55424 41.4805 2.28361C35.9987 0.012985 29.9667 -0.581115 24.1473 0.576442C18.3279 1.734 12.9824 4.59122 8.7868 8.7868C4.59122 12.9824 1.734 18.3279 0.576442 24.1473C-0.581115 29.9667 0.0129851 35.9987 2.28361 41.4805C4.55424 46.9623 8.39942 51.6476 13.3329 54.9441C18.2664 58.2405 24.0666 60 30 60V30H60Z"
        fill="white"
      />
      <path
        d="M46 32C43.2311 32 40.5243 32.8211 38.222 34.3594C35.9197 35.8978 34.1253 38.0843 33.0657 40.6424C32.0061 43.2006 31.7288 46.0155 32.269 48.7313C32.8092 51.447 34.1426 53.9416 36.1005 55.8995C38.0584 57.8574 40.553 59.1908 43.2687 59.731C45.9845 60.2712 48.7994 59.9939 51.3576 58.9343C53.9157 57.8747 56.1022 56.0803 57.6406 53.778C59.1789 51.4757 60 48.7689 60 46H46V32Z"
        fill="white"
      />
    </svg>
  )
}

export function DownwardTrend(props: Readonly<React.SVGProps<SVGSVGElement>>) {
  return (
    <svg
      width="118"
      height="50"
      viewBox="0 0 118 50"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      {...props}
    >
      <g filter="url(#filter0_d_999_4137)">
        <path
          d="M3 40.962L8.80808 37.924L10.5505 32.3544L15.7778 44L23.3283 35.8987L27.3939 44L32.0404 40.962L37.2677 16.6582L40.7525 18.6835L42.4949 14.6329L49.4646 12.6076L52.9495 4L54.1111 12.6076L58.7576 7.5443L62.2424 24.2532L66.8889 25.2658L69.7929 28.8101L70.9545 24.2532L74.4394 16.6582L77.9242 19.6962L83.1515 16.6582L88.3788 33.3671L94.7677 23.2405H97.6717L104.641 15.6456L107.545 20.7089L111.03 16.6582L112.773 26.7848L118 14.6329"
          stroke="#E20029"
          stroke-width="2"
        />
      </g>
      <defs>
        <filter
          id="filter0_d_999_4137"
          x="0.536621"
          y="0.13208"
          width="120.382"
          height="49.6516"
          filterUnits="userSpaceOnUse"
          color-interpolation-filters="sRGB"
        >
          <feFlood flood-opacity="0" result="BackgroundImageFix" />
          <feColorMatrix
            in="SourceAlpha"
            type="matrix"
            values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
            result="hardAlpha"
          />
          <feOffset dy="2" />
          <feGaussianBlur stdDeviation="1" />
          <feComposite in2="hardAlpha" operator="out" />
          <feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.2 0" />
          <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_999_4137" />
          <feBlend
            mode="normal"
            in="SourceGraphic"
            in2="effect1_dropShadow_999_4137"
            result="shape"
          />
        </filter>
      </defs>
    </svg>
  )
}
export function UpwardTrending(props: Readonly<React.SVGProps<SVGSVGElement>>) {
  return (
    <svg
      width="126"
      height="37"
      viewBox="0 0 126 37"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      {...props}
    >
      <g filter="url(#filter0_d_1075_3157)">
        <path
          d="M3 28.0508L8.4 25.5932L14.4 19.6949L17.4 29.5254L25.2 23.6271L29.4 31L37.8 28.0508V16.7458L48 8.88136L49.8 7.8983L51 4.45763L53.4 6.91525L59.4 2L64.2 3.9661L67.8 2.98305L70.2 8.88136L73.8 6.91525H78L85.8 2.98305L88.8 8.88136L94.2 11.8305H101.4L105 11.339L109.8 7.8983L112.2 13.7966L115.8 11.339L120 12.8136L123 2.98305"
          stroke="#16A34A"
          stroke-width="2"
        />
      </g>
      <defs>
        <filter
          id="filter0_d_1075_3157"
          x="0.585693"
          y="0.848633"
          width="125.371"
          height="35.3713"
          filterUnits="userSpaceOnUse"
          color-interpolation-filters="sRGB"
        >
          <feFlood flood-opacity="0" result="BackgroundImageFix" />
          <feColorMatrix
            in="SourceAlpha"
            type="matrix"
            values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
            result="hardAlpha"
          />
          <feOffset dy="2" />
          <feGaussianBlur stdDeviation="1" />
          <feComposite in2="hardAlpha" operator="out" />
          <feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.2 0" />
          <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_1075_3157" />
          <feBlend
            mode="normal"
            in="SourceGraphic"
            in2="effect1_dropShadow_1075_3157"
            result="shape"
          />
        </filter>
      </defs>
    </svg>
  )
}
